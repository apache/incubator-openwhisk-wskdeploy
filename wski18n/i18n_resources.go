// Code generated by go-bindata.
// sources:
// wski18n/resources/de_DE.all.json
// wski18n/resources/en_US.all.json
// wski18n/resources/es_ES.all.json
// wski18n/resources/fr_FR.all.json
// wski18n/resources/it_IT.all.json
// wski18n/resources/ja_JA.all.json
// wski18n/resources/ko_KR.all.json
// wski18n/resources/pt_BR.all.json
// wski18n/resources/zh_Hans.all.json
// wski18n/resources/zh_Hant.all.json
// DO NOT EDIT!

package wski18n

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _wski18nResourcesDe_deAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesDe_deAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesDe_deAllJson,
		"wski18n/resources/de_DE.all.json",
	)
}

func wski18nResourcesDe_deAllJson() (*asset, error) {
	bytes, err := wski18nResourcesDe_deAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/de_DE.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1515697090, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesEn_usAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x5a\x6d\x6f\xdb\x38\x12\xfe\xde\x5f\x31\x28\x0e\xe8\x2e\x90\xaa\xed\x1e\x0e\x38\x14\x08\x0e\xbd\x6b\x6e\x9b\xdb\xb6\x29\xf2\xb2\xc5\xa2\x1b\xa8\xb4\x38\xb6\xb9\xa6\x48\x81\xa4\xec\xba\x86\xef\xb7\x1f\x86\x94\x64\x39\x09\x25\xda\xdd\xe2\xfa\xa5\x4a\x38\x9c\x67\x38\x33\x9c\x37\xe6\xd3\x23\x80\xcd\x23\x00\x80\xc7\x82\x3f\x7e\x09\x8f\x4b\x3b\xcb\x2b\x83\x53\xf1\x25\x47\x63\xb4\x79\x7c\x12\x56\x9d\x61\xca\x4a\xe6\x84\x56\x44\x76\xe6\xd7\x1e\x01\x6c\x4f\x06\x38\x08\x35\xd5\x11\x06\xe7\xb4\x34\xb6\xdf\xd6\x45\x81\xd6\x46\x58\x5c\x35\xab\x63\x5c\x56\xcc\x28\xa1\x66\x11\x2e\x1f\x9b\xd5\x28\x97\xa2\xe4\x39\x47\x5b\xe4\x52\xab\x59\x5e\xd5\x13\x29\xec\x3c\xc2\xec\x43\x58\x05\x06\x15\x2b\x16\x6c\x86\xe0\x34\xb8\x39\x82\xc1\x99\xb0\xce\xac\xc1\xa2\x03\xa1\xe0\xbf\xcf\xb2\x95\x5d\x54\x46\x57\x36\x4b\x85\x36\x58\x69\xe3\x22\xc8\x97\x7e\xd1\x82\x56\xc0\xb1\x92\x7a\x8d\x1c\x50\x39\xe1\x04\x5a\xf8\x41\x64\x98\x9d\xc0\x87\x20\x93\x3d\x81\x57\x05\xed\xb3\x27\x70\x6d\xc4\x6c\x86\xc6\x9e\xc0\x65\x2d\x69\x05\x5d\x91\xfd\x08\xcc\xc2\x0a\xa5\xa4\xff\x0d\x16\xa8\x9c\xdf\xb1\xf4\x68\x96\xe4\xa7\x33\xd9\x0a\x0b\x31\x15\xc8\x41\xb1\x12\x6d\xc5\x0a\x4c\x3f\x8b\xd6\xb1\x93\xbc\x02\xa7\xb5\x24\xc5\x85\x83\x9c\x40\xad\xc2\x17\x30\xc5\xc1\xae\x55\x01\xba\x42\xb5\x9a\x0b\xbb\x68\xf5\x6c\xa1\xb6\x42\xcd\x80\x41\xc9\x94\x98\xa2\x75\x9e\x58\x57\xc4\x95\xc9\x86\x55\x49\x27\x99\x0a\xd9\x91\xff\xf6\xea\xdd\xdb\x14\x99\xed\x5c\x1b\x77\x8c\xed\x59\x67\xf9\x74\x98\x41\x3b\x7f\x30\x7a\x29\x38\x5a\x60\x60\xeb\xb2\x64\x66\x0d\x81\x1e\xf4\x14\x56\x73\xe6\x9e\x58\x98\x20\xf6\xbc\xe0\xdb\xac\xd5\x88\x34\x6a\x2e\xf2\x6b\xa7\x61\x8e\xb2\x6a\xa0\x61\xad\x6b\x93\x64\x29\xb2\x48\xba\x2c\x8c\xf3\x98\x28\x9c\x03\x53\xc0\xbc\x73\x9f\xc0\x14\x91\x9f\x80\x0b\x1e\x0e\xda\x80\xa9\x65\x77\x21\x5b\xf0\x64\xd8\x25\x1a\x4b\x38\x31\xb3\x08\xe5\x3c\xe3\x86\x0e\x54\x5d\x4e\x08\x76\x0a\x2b\xbb\x08\x1a\x19\xc6\x9a\x4a\x36\xcb\x59\x25\xf2\xb9\xb6\x31\x65\x07\x4d\xbe\xfa\x70\x0e\x9f\xdf\x5c\x5c\x5d\x7f\x4e\xe4\x38\x2c\x7b\x8f\xe9\xaf\x67\x97\x57\xe7\x17\xef\x93\xf8\xd6\x6e\x9e\x2f\x70\x1d\x61\x4a\xcb\xda\x88\xaf\xfe\x17\xf0\xf9\x97\xb3\xdf\x52\x98\x16\x68\x5c\x4e\xee\x10\xe1\x5a\x31\x37\x27\x95\x92\xa2\x33\x22\xf6\xbe\x93\xc2\x58\xab\xa9\x88\xa5\x80\xb0\xe8\x59\xc1\x0f\x1c\xa7\xac\x96\x0e\x84\x85\xbf\xbc\xb9\x78\x77\xb6\x0b\xd4\x3f\xa6\x68\x45\x4a\xbd\xca\x1b\x1e\xb1\xc4\xe5\x89\xa0\x23\x1a\xe7\xba\x8b\x5e\x43\x7a\xe9\x22\x66\x17\xe6\x12\x58\x0b\xe5\xd0\xd0\x8d\x59\xc6\x74\x1e\xa4\xed\xd1\x41\x65\x74\x59\x25\x09\xbe\xc0\x75\xb2\x39\x17\xb8\x4e\x15\x3a\x68\xb9\x64\x8a\xcd\x30\x16\x0c\x82\xd8\x95\xd1\x7f\x60\xe1\x76\xa9\xd0\x69\x98\xd0\xed\x37\x0b\xe4\xd0\x72\x18\x47\xec\xc2\xc5\xb0\xfe\xf7\x42\x5a\x02\xdb\x2e\x14\x47\xf8\xee\xd6\xc7\x79\x35\x47\x1d\x91\xd0\xa2\x59\xa2\x91\x68\x6d\xab\x9b\x04\xd6\xd6\x19\x11\xe5\x1c\x14\x5d\x5b\x34\xe4\xd2\x42\x21\x07\x53\x2b\x27\xca\x2e\x16\x26\x20\x38\x3d\x9b\x49\xcc\x29\x7d\x44\x60\xae\x3d\x05\xbc\xa1\x04\x53\xa2\xb5\x6c\x96\xee\x29\x4b\x34\x13\x6d\x63\x4a\x6e\x56\x41\xd7\xae\xaa\x87\xd4\xe1\xc3\x44\x5e\x0a\x4b\x09\xcc\x07\xc0\x78\xfc\xbb\x9e\x23\x10\x05\x39\x5e\x11\x82\x20\x39\xb8\xb0\xa0\xb4\x83\xc0\xaa\x36\xc8\xb3\xdf\x87\xd4\x73\x07\xb1\x12\x03\xb9\x81\x10\x29\x88\x13\xc9\xb7\xe1\x8c\x79\x25\x21\x75\x34\xc7\x41\x35\x47\x19\xea\x10\xee\x9e\x67\xb3\xc9\xe8\x73\xbb\x3d\x81\xa9\xd1\x25\xfd\x6c\x75\x6d\x0a\xdc\x6e\x93\x10\x83\xb9\xc6\x10\x89\xac\xb5\x94\x45\x77\x1c\x56\xa7\x9c\x31\xb4\x3d\x2d\x6e\x36\x59\xf7\xf3\xc1\xa7\xac\x55\xc9\x8c\x9d\x33\x29\x73\xa9\x0b\x26\x23\xa0\x37\x2d\x19\x5c\x54\xa8\x3e\xfa\xcc\x4f\x32\x06\x30\xbf\x13\x96\x4c\xd6\x68\x53\xd1\x14\xba\x95\x36\x8b\xa3\xf0\x7c\x52\x51\xe8\x06\xb1\x76\x39\x2d\x2f\x98\x2a\x50\xca\x68\xcc\xbf\xf8\x25\x83\x7f\x05\x1a\x2a\x31\x77\x3b\x53\x01\xa6\x4c\xc4\xb9\xbf\xde\x25\x57\x2e\x78\xe3\xf4\x65\x25\xd1\x21\xd8\x9a\x5a\xd1\x69\x2d\xe5\x3a\x83\xcb\x5a\xc1\xe7\xae\xea\xeb\xda\x97\xcf\x14\x7f\x0d\x96\x9a\x52\x28\x33\x4e\x30\x29\xd7\xbb\x3a\x9d\x59\x8b\x6e\x58\xed\x3d\x49\x43\xd1\x9f\x5b\xc7\x5c\x1d\xab\x33\x9e\x3e\x7d\xfa\xf4\xf4\xf4\xf4\xb4\xa7\xfb\xde\x19\xae\xfc\x56\x20\x02\x22\x4c\x42\xf5\x0d\x39\xf2\x14\x15\xb5\xaa\xe1\xd0\x74\xf1\x41\x39\xc3\x5e\x75\xbc\xad\xfb\x7b\xd3\x41\x06\xed\x7d\xd3\xa3\x1c\xb6\x78\x32\xde\x98\xfe\xf6\x20\x8f\xd0\x60\x5b\x7f\xe4\xbe\xc7\x1a\xaf\x1b\x6f\x7c\x2b\xf6\x69\xb3\xc9\xa8\x3e\xd8\x6e\x6f\x61\xaa\x4d\xea\xbd\xb9\x03\xd6\x3f\xe8\x41\x70\xc9\xa6\xf3\x45\xdc\x3a\x6f\x6f\xcc\xc8\x78\x68\xb3\xa1\x92\x72\xbb\xf5\x78\x14\x58\x09\x6f\xce\x9a\xf6\xb8\xaf\xd2\xee\x0e\xa6\xa3\xc7\xe7\x49\xaf\xdb\x75\x78\x50\x80\x2c\x1b\xe8\x74\x1b\x88\x56\x21\x7f\xe6\x11\x77\x3c\x53\x0e\xd9\x52\xc7\x8f\x79\xb3\xa3\x38\xe2\xa0\x1c\x2b\x54\x1c\x55\x71\x88\x3e\x77\x9b\xfa\x40\x87\xe1\xec\x6e\x61\x54\xa9\xaf\x1f\x84\xf9\x16\xcf\x79\x58\x0a\x8a\x3d\xb5\x89\xd5\x58\xbd\x48\xaa\xa7\x91\xa3\xff\x1f\xd3\x50\x7b\x9e\xc3\x1c\xe5\xdb\x2c\x78\x3f\x92\xfe\x39\x36\x4c\xbc\x1a\x31\x49\x86\xed\xb8\x17\xd1\x8f\xb4\xe4\x48\x10\xa6\x16\xf6\xd8\xb4\xe6\x25\x0a\x49\xa6\x6b\x91\x87\x64\x01\x5e\x1b\xb2\x64\x03\xdb\x4f\x15\xdf\xcf\xdf\xda\x33\x4e\x75\xad\x78\xde\xc8\xdb\x84\xaa\xa8\x03\x48\x74\xd1\xd8\xb4\x9a\x8b\x62\x0e\x2b\x3f\xdd\x26\xb9\x78\x28\x47\xdd\x1c\xa1\xa8\x8d\x21\xc5\xb4\x07\x6c\x07\x08\x3e\x69\x85\x6f\xe2\xc0\xac\x3f\x0b\xe9\x2f\x39\x7d\x85\xb1\xc9\x48\x17\xf7\xbb\xfa\x20\x91\x59\x3f\x64\x59\x0a\x8e\x5e\x28\xa2\x27\xd9\x7d\xba\xec\x8a\xb9\x97\x30\x8e\x35\xd8\xa3\xde\xc3\x62\xea\x6e\xcf\xea\xf4\x02\x55\x02\x50\x33\xe0\x8c\x18\x43\xc3\x5a\xd7\x60\xd0\x5b\x7e\xc5\x94\xdb\xcd\xaa\xc0\xcd\x85\xfd\x07\xfc\xb0\x7e\xf6\xfe\xc7\x04\x9c\xb1\xd6\xf4\xfe\x91\x7a\x3d\xd6\xa7\x76\xb6\xe7\x3b\x1c\x6a\xb9\x66\x35\x5a\x77\x9b\x80\xdb\x1a\xf9\xa0\x13\x76\xef\x16\x09\x67\x3c\xbb\xbc\xbc\xb8\xbc\x8a\xb0\x3f\xbd\xfb\x0f\x02\x39\xdc\x5b\x38\x3d\x1d\xc8\xed\xc6\xec\x07\xb1\x85\xd2\x2b\x95\xbb\x75\x35\x90\x84\xda\x60\x45\x54\xa4\xb1\x66\x57\x06\xbb\xb1\x36\x68\x25\xd7\x60\xeb\x2a\xbc\x40\x3d\xf3\xf3\xe4\xcc\xae\xad\xc3\x12\x26\x42\x71\xa1\x66\x16\xb4\x81\x99\x70\xf3\x7a\x92\x15\xba\xec\x1e\x03\x86\x8b\x91\x20\x70\x1b\xd5\xc8\x90\xb9\xd2\x2e\xc4\x81\x81\xae\xfa\xc1\x3b\x2f\xd4\xdd\xe9\xa8\x0f\x72\x9e\x17\x2d\xee\xbf\x46\x8c\x89\xd5\xd4\x49\x85\x41\xe6\x62\xda\xf3\x6f\xa4\xe0\x49\xf6\x22\xd1\x4a\xb8\x39\xf8\xc7\xd5\x76\x90\xf5\x92\x16\xd1\x98\xed\xd6\xbf\x5a\x85\xb5\x42\xf3\xb0\x40\x1f\x23\xdd\x7f\x4f\xa4\x10\x1e\x07\x45\xe2\xf7\x82\xe3\x77\x12\x69\x8a\xc8\x73\xa1\x96\x7a\x11\x13\xe8\xdf\x3e\x53\xd1\x65\x09\x64\x3e\xdc\xd1\x36\x58\xcd\xfd\x23\x56\x23\x69\xfb\x8a\x13\x96\xbe\x8f\xb4\x0b\x5c\x77\x23\xb0\x92\x29\xce\x9c\x36\x43\xe3\xbd\x8e\xc6\xcf\x8b\x3e\xb5\xca\xbc\xa5\x6b\xd2\xf0\x19\xc5\xec\x7a\xa8\x31\xbf\x7e\xd7\x77\xcf\x9e\xe7\x32\x07\x7e\xb4\xdb\x6b\xaa\x46\x41\xfd\x45\x2a\x85\x2d\x99\x2b\x62\xaf\x99\x7b\xf7\x88\x36\x70\x0f\xc1\x07\xae\x93\x5f\x6f\x1b\x3b\xae\x31\xcc\x05\x3d\x88\x37\xab\xcf\x60\x44\x54\xf6\x98\xec\x5d\xbb\xb0\xda\x1e\x63\xf8\x10\xcd\x8c\x99\xdc\x8b\x49\x11\x53\xdb\x79\x58\xa5\xe8\xd3\x98\xa4\x1b\x4e\x13\x56\xf3\x4d\xb2\xec\xde\x47\xf7\xa4\xd2\xc6\xcb\x1e\xde\x14\xfd\x9e\xf0\x99\xa2\xe7\x56\xc4\x11\x55\x5f\x1e\x22\xd0\x1d\xbd\xfa\xab\x10\x24\x7a\x62\x21\x4c\x0a\x83\x2a\xf1\x8b\x43\x65\x5b\xa1\xf1\x8b\x6b\xdb\xed\x6f\x39\x8a\xcd\x67\x18\xab\x5c\x76\x57\x79\x86\xe1\x29\xb4\x49\x09\xbb\x07\x01\x1b\xea\xac\xdd\x38\xca\xa2\x59\x8a\xa2\x77\x7d\x47\x05\xa9\x8d\x3c\xdc\xe4\x9b\x4d\x56\x1b\x49\x29\x6c\xbb\x85\x9b\xcb\xb7\xfe\xf0\xb5\x91\x8d\x0f\xd2\x4f\xa4\xb3\x40\x70\x9b\x96\x01\x48\x90\x92\xc9\xa9\x36\x65\xb4\xd4\x7e\xd7\xae\x0f\x49\x90\xc1\xb5\x59\x03\x9b\x31\xa1\xb2\x6c\x14\xf6\x0f\xab\x55\x17\xa5\x8a\x92\x0f\x3c\xc1\xfe\xe7\xea\xe2\x3d\x08\x55\xd5\x0e\x38\x73\x0c\xde\x35\xda\x78\x52\x94\xfc\x09\xc5\xac\x87\x91\x3e\xbe\xba\x7c\x7f\xfe\xfe\xe7\xf4\x5a\xa4\xdd\x70\x58\x35\xb2\x62\x46\xe5\x85\x2e\x29\x8a\xe6\x06\x5d\x34\xd4\x5e\xd2\x5a\x3b\x37\x2a\x4a\xee\xcb\xef\xa9\x43\x13\xc2\xfc\xcb\xe0\xdf\xe4\x3c\xb7\x43\xca\x6b\xf0\xfc\x7c\xfe\x60\x07\xea\xbf\x10\xf7\xc7\x57\x1c\x1d\x16\x6e\xa4\x71\xf4\xc8\x94\x5c\x38\x56\x06\x0b\x46\xcd\x8b\xc1\x4a\xb2\x22\xea\x38\x14\x7d\x09\x47\x4b\xde\xe4\x14\xff\x24\x11\xfe\x92\x63\xcf\x5b\x83\x4c\x2b\x21\x25\x58\xad\x15\x4c\x10\x76\x30\x27\x50\x85\x6a\xb8\xb6\x21\xb3\xfa\x82\x08\x57\x7b\x3c\xad\x43\x96\x78\x80\x46\x1d\xc7\xe4\x44\x3b\xd7\xb5\xe4\x24\x9e\x45\x97\x41\x98\x04\xee\xd7\xe3\x44\xed\xbf\xc2\x4c\x20\x49\x22\x4f\x3f\x62\x4f\x92\x2b\x20\x50\xf8\xbb\x9f\xab\x29\x9a\xfa\xfd\x87\x40\x52\xbe\xb6\x6c\x39\x68\xc1\x31\x50\xbf\xbf\xb5\x6a\xdb\x78\xb6\x7f\x3f\xd2\xff\xc3\x91\x71\xc1\xa4\x28\x85\xcb\xc5\x4c\x69\x13\x15\xa9\xf5\xeb\x26\x01\xf8\x2d\x5e\x2a\xff\x75\x37\x1f\x0b\x0b\x0d\xbb\x54\xf4\x62\xce\xd4\x0c\xd9\x24\xfa\xdc\xff\xb6\x43\xec\x0a\x00\xdb\x9e\x5b\xae\xc3\xcc\xa1\xe3\x91\xc1\x39\xc1\x53\x11\x95\xe0\x0b\x5e\x02\x9b\x4b\x3d\xcb\xad\xf8\x1a\x13\x40\xea\xd9\x95\xf8\x8a\xa4\xdb\xb0\x61\xef\xc4\x3b\x17\x65\xca\x3f\x4d\x51\xc1\x39\x41\xb7\x42\x54\xf0\xdc\x17\x96\x2f\x9e\x27\x8b\x52\x62\xa9\xcd\x7a\x48\x9a\x40\x71\xac\x40\x2f\x7e\xfa\xbb\x17\xe9\x6f\x2f\x7e\x4a\x96\x89\x72\xb0\xae\x63\x09\xbc\x59\x3d\x4a\x98\xe7\x41\x3f\x7f\x7d\x4e\xff\xc6\xe5\xf1\x2d\x22\xf5\xd6\x15\x1a\x27\x30\x36\xc6\x6b\xc3\x60\x2f\x5e\x85\xa1\x8d\x33\x02\xbb\xb1\x4d\xe8\x37\x77\xcc\xda\xf1\xce\xc3\x31\xb1\x0d\x89\x5c\x7b\x87\xa3\xc8\x28\x1c\xe8\xda\x59\xc1\xbd\x21\xae\x0d\x5b\x0a\x0b\x93\x5a\x48\x3e\xdc\x9f\xfa\xa3\x84\x70\x60\xc8\x6d\x93\x42\x41\xe7\xfd\x7b\x01\x41\xdd\x89\xea\x8d\xb6\x7d\xd7\xbd\xd9\x64\xcd\x6f\x5b\x75\x53\x95\x2c\x54\xd3\xec\xd0\x0f\xac\x18\x29\x9d\xbc\xa8\x6d\x3d\x1a\x2e\x59\x2c\x4c\xb4\xe5\x68\x43\x45\x05\xdd\x9d\xca\x74\xc2\x2c\x72\xd0\xaa\x57\x19\x47\x8b\xcf\x83\x2b\xce\xd7\x67\xff\xbc\xf9\x39\xb9\xf6\xf0\xd4\x87\x15\x1e\x7c\x12\xfe\x2e\x69\x89\x46\x4c\x63\x45\xc7\xaf\x7e\xb1\xa9\x1d\xef\xdb\x0b\xbf\x08\xeb\xec\x48\x60\x22\xa0\x6e\xf6\x1d\x1e\xc9\x46\xdf\x38\x3c\xd5\xcb\x31\xae\xbd\xa9\xfb\x20\xdf\xfe\xec\x7d\x8f\xf3\xa3\xdb\x47\xff\x0b\x00\x00\xff\xff\x96\xa0\xd5\xce\xfa\x2d\x00\x00")

func wski18nResourcesEn_usAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesEn_usAllJson,
		"wski18n/resources/en_US.all.json",
	)
}

func wski18nResourcesEn_usAllJson() (*asset, error) {
	bytes, err := wski18nResourcesEn_usAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/en_US.all.json", size: 11770, mode: os.FileMode(420), modTime: time.Unix(1516648188, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesEs_esAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesEs_esAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesEs_esAllJson,
		"wski18n/resources/es_ES.all.json",
	)
}

func wski18nResourcesEs_esAllJson() (*asset, error) {
	bytes, err := wski18nResourcesEs_esAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/es_ES.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1515697090, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesFr_frAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\xe6\x52\x50\xa8\xe6\x52\x50\x50\x50\x50\xca\x4c\x51\xb2\x52\x50\x4a\xaa\x2c\x48\x2c\x2e\x56\x48\x4e\x2d\x2a\xc9\x4c\xcb\x4c\x4e\x2c\x49\x55\x48\xce\x48\x4d\xce\xce\xcc\x4b\x57\xd2\x81\x28\x2c\x29\x4a\xcc\x2b\xce\x49\x2c\xc9\xcc\xcf\x03\xe9\x08\xce\xcf\x4d\x55\x40\x12\x53\xc8\xcc\x53\x70\x2b\x4a\xcd\x4b\xce\x50\xe2\x52\x50\xa8\xe5\x8a\xe5\x02\x04\x00\x00\xff\xff\x45\xa4\xe9\x62\x65\x00\x00\x00")

func wski18nResourcesFr_frAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesFr_frAllJson,
		"wski18n/resources/fr_FR.all.json",
	)
}

func wski18nResourcesFr_frAllJson() (*asset, error) {
	bytes, err := wski18nResourcesFr_frAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/fr_FR.all.json", size: 101, mode: os.FileMode(420), modTime: time.Unix(1515697090, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesIt_itAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesIt_itAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesIt_itAllJson,
		"wski18n/resources/it_IT.all.json",
	)
}

func wski18nResourcesIt_itAllJson() (*asset, error) {
	bytes, err := wski18nResourcesIt_itAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/it_IT.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1515697090, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesJa_jaAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesJa_jaAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesJa_jaAllJson,
		"wski18n/resources/ja_JA.all.json",
	)
}

func wski18nResourcesJa_jaAllJson() (*asset, error) {
	bytes, err := wski18nResourcesJa_jaAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/ja_JA.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1515697090, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesKo_krAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesKo_krAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesKo_krAllJson,
		"wski18n/resources/ko_KR.all.json",
	)
}

func wski18nResourcesKo_krAllJson() (*asset, error) {
	bytes, err := wski18nResourcesKo_krAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/ko_KR.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1515697090, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesPt_brAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesPt_brAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesPt_brAllJson,
		"wski18n/resources/pt_BR.all.json",
	)
}

func wski18nResourcesPt_brAllJson() (*asset, error) {
	bytes, err := wski18nResourcesPt_brAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/pt_BR.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1515697090, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesZh_hansAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesZh_hansAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesZh_hansAllJson,
		"wski18n/resources/zh_Hans.all.json",
	)
}

func wski18nResourcesZh_hansAllJson() (*asset, error) {
	bytes, err := wski18nResourcesZh_hansAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/zh_Hans.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1515697090, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesZh_hantAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesZh_hantAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesZh_hantAllJson,
		"wski18n/resources/zh_Hant.all.json",
	)
}

func wski18nResourcesZh_hantAllJson() (*asset, error) {
	bytes, err := wski18nResourcesZh_hantAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/zh_Hant.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1515697090, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"wski18n/resources/de_DE.all.json": wski18nResourcesDe_deAllJson,
	"wski18n/resources/en_US.all.json": wski18nResourcesEn_usAllJson,
	"wski18n/resources/es_ES.all.json": wski18nResourcesEs_esAllJson,
	"wski18n/resources/fr_FR.all.json": wski18nResourcesFr_frAllJson,
	"wski18n/resources/it_IT.all.json": wski18nResourcesIt_itAllJson,
	"wski18n/resources/ja_JA.all.json": wski18nResourcesJa_jaAllJson,
	"wski18n/resources/ko_KR.all.json": wski18nResourcesKo_krAllJson,
	"wski18n/resources/pt_BR.all.json": wski18nResourcesPt_brAllJson,
	"wski18n/resources/zh_Hans.all.json": wski18nResourcesZh_hansAllJson,
	"wski18n/resources/zh_Hant.all.json": wski18nResourcesZh_hantAllJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"wski18n": &bintree{nil, map[string]*bintree{
		"resources": &bintree{nil, map[string]*bintree{
			"de_DE.all.json": &bintree{wski18nResourcesDe_deAllJson, map[string]*bintree{}},
			"en_US.all.json": &bintree{wski18nResourcesEn_usAllJson, map[string]*bintree{}},
			"es_ES.all.json": &bintree{wski18nResourcesEs_esAllJson, map[string]*bintree{}},
			"fr_FR.all.json": &bintree{wski18nResourcesFr_frAllJson, map[string]*bintree{}},
			"it_IT.all.json": &bintree{wski18nResourcesIt_itAllJson, map[string]*bintree{}},
			"ja_JA.all.json": &bintree{wski18nResourcesJa_jaAllJson, map[string]*bintree{}},
			"ko_KR.all.json": &bintree{wski18nResourcesKo_krAllJson, map[string]*bintree{}},
			"pt_BR.all.json": &bintree{wski18nResourcesPt_brAllJson, map[string]*bintree{}},
			"zh_Hans.all.json": &bintree{wski18nResourcesZh_hansAllJson, map[string]*bintree{}},
			"zh_Hant.all.json": &bintree{wski18nResourcesZh_hantAllJson, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

