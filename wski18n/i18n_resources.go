// Code generated by go-bindata.
// sources:
// wski18n/resources/de_DE.all.json
// wski18n/resources/en_US.all.json
// wski18n/resources/es_ES.all.json
// wski18n/resources/fr_FR.all.json
// wski18n/resources/it_IT.all.json
// wski18n/resources/ja_JA.all.json
// wski18n/resources/ko_KR.all.json
// wski18n/resources/pt_BR.all.json
// wski18n/resources/zh_Hans.all.json
// wski18n/resources/zh_Hant.all.json
// DO NOT EDIT!

package wski18n

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _wski18nResourcesDe_deAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesDe_deAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesDe_deAllJson,
		"wski18n/resources/de_DE.all.json",
	)
}

func wski18nResourcesDe_deAllJson() (*asset, error) {
	bytes, err := wski18nResourcesDe_deAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/de_DE.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesEn_usAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x6d\x6f\xe3\xb8\x11\xfe\x9e\x5f\x31\xd8\x2f\x69\x81\xc0\xdd\xbd\xa2\x40\x11\xa0\x28\x82\x6e\xee\x9a\xde\xe5\x05\x49\xee\x16\x87\xeb\xc1\xa1\xa5\x91\xc4\x33\x45\x0a\x24\x65\xaf\xcf\xf0\x7f\x2f\x48\x4a\xb6\xec\x88\x7a\xf3\x4b\x82\x43\xf7\x93\x62\x71\x9e\x67\x66\x48\x0e\x67\xa8\xd9\x5f\xce\x00\x96\x67\x00\x00\x1f\x68\xf8\xe1\x12\x3e\xa4\x2a\x1e\x67\x12\x23\xfa\x75\x8c\x52\x0a\xf9\xe1\xc2\xbd\xd5\x92\x70\xc5\x88\xa6\x82\x9b\x61\xd7\xf6\xdd\x19\xc0\xea\xa2\x01\x61\x4e\x24\xa7\x3c\xf6\x60\x7c\x29\xde\xb6\xa1\xa8\x3c\x08\x50\x29\x0f\xca\x53\xf1\xb6\x0d\x85\xf2\x48\x78\x20\x6e\xcc\x2b\xaf\xfc\x6f\x4a\xf0\x71\x4a\x95\xa2\x3c\x1e\x07\x69\x38\x9e\xe2\xc2\x03\xf4\x9f\xa7\xfb\x3b\xa0\x3c\xcb\x35\x84\x44\x13\xb8\x75\x52\x70\x1e\xa4\xe1\x39\x18\x39\x2f\x8b\x01\x8e\x18\x89\xc7\x9c\xa4\xa8\x32\x12\xa0\x87\x63\xf3\xbe\x1d\x8b\xe4\x3a\x69\x50\xd7\xbc\x16\x92\xfe\x6e\x7f\x80\x97\xef\xaf\x7f\x7e\xe9\x02\x9a\xd1\x71\x22\x94\xf6\x80\xce\x13\xaa\xa6\x70\xf5\x70\x03\x2f\xff\xbe\x7f\x7a\xee\x8a\x38\x43\xa9\x0c\x42\x2b\xe8\x4f\xd7\x8f\x4f\x37\xf7\x77\x5d\x70\xa7\xb8\x18\x47\x94\xf9\x3c\x99\x11\x9d\x80\x88\x40\x27\x08\xa3\x29\x2e\xc0\x8e\x6d\x87\x0d\x50\xea\xce\xb8\x66\x70\x0b\x70\x4a\x38\x8d\x50\xe9\x31\x17\x7a\x1c\x89\x9c\x87\x1e\xe0\xdb\x62\xa0\xc5\x03\x2e\x34\xd8\xd1\x40\x34\x58\xce\x5f\x96\xcb\x91\x79\x58\xad\x7e\x1d\xfd\x97\xfb\x09\x73\xbb\x94\xd7\xb4\x21\x66\x4c\xf8\xd6\xc8\x8f\x76\x01\x57\x90\x21\x12\x12\x9c\x48\x8a\x5c\xf7\x21\xca\xf9\x00\xaa\x52\xa8\x95\x4c\xe6\x5c\xd3\x14\xcd\x56\x4d\x89\x0e\x12\x0f\xcb\xa3\x1b\x66\x79\x0a\x11\x43\xa5\x32\x0c\x68\x44\x31\x04\xca\xa1\xd4\x18\x42\x81\xca\x3a\xda\x22\xc2\x9c\xea\x04\x48\x60\xb7\x8b\x12\xb9\x0c\xd0\x4d\x05\x7e\xd5\xc8\xcd\xf2\xb5\xa8\xf8\x55\x97\xca\x17\x63\xcd\xaf\xee\xb1\x6d\x6a\x4a\x23\x82\x84\xf0\x18\x7d\x0b\xa1\xb4\xa1\x18\x05\x5a\xec\x9a\x33\x21\x0a\x43\x10\xdc\x2e\xc2\x46\x8d\xf7\x52\x33\xe7\x2a\xcf\x32\x21\x75\xab\xaa\x9d\xdc\x4d\x9d\xb3\xd7\x98\x56\xb9\x8a\x05\xdd\x15\x74\xa3\xc6\x8c\xa6\x54\x8f\x69\xcc\x85\xf4\x6a\x78\xc3\x67\x84\xd1\xb0\xe4\xb0\x22\x96\xc9\x3e\x19\x65\x77\x54\x2c\xe0\x1a\xf9\x03\xc1\x23\x1a\xaf\x8f\x0d\x13\x69\xfd\x71\xf8\xd9\x58\x98\xeb\x04\xb9\xa6\x81\x0b\xc6\x26\x1c\x15\xde\x70\x50\x79\x5f\xc6\x8c\x36\x04\x69\xc3\x68\xa2\xa9\x19\xb2\x1f\x4f\xdb\x71\x65\x98\xd6\x63\x86\x51\x15\xa6\x34\x9d\xe0\xbb\xf6\x2c\x97\x23\xf3\xb8\x5a\x5d\x40\x24\x45\x6a\xfe\x76\xab\x7f\xb5\xea\xc4\xe8\xa6\xab\x8d\xd1\x0c\x2b\x67\x4a\xa1\x1e\xc6\xb5\x76\x4e\x1b\xdb\x96\x17\x97\xcb\xd1\xfa\xef\xde\x56\xa2\x94\xe3\x18\x75\xb9\x8b\x7d\x99\xd5\xb7\x84\x32\x17\x5c\x62\xd4\x76\x1b\x6e\x36\x66\x29\xea\x88\xef\x33\xe4\x5f\xec\x11\xad\x50\xce\x68\x80\x97\x46\x17\x94\xb2\xaa\x48\xed\x01\xc1\x53\x22\x55\x42\x18\x1b\x33\x11\x10\xe6\x3b\x19\xca\x61\x15\x26\xe3\x2d\xc7\x6e\x25\x61\x46\x58\x8e\xaa\xf9\x38\xda\xb0\x71\xd4\x73\x21\xa7\x83\xf8\x28\xd7\x28\x39\x36\x9f\x46\x9b\x43\x6b\x9c\x49\x91\x66\xbe\x9d\xf8\x59\xc0\x42\xe4\x20\x91\x30\xb6\x80\x39\xe1\xda\x38\xdc\x49\x83\x4e\xa8\xfa\x27\xfc\x69\xf1\x97\xbb\x3f\x5f\x42\x27\x2e\x9b\x2b\x63\xe8\x0d\x76\x9f\xd7\x43\x21\x10\x69\xc6\xd0\x4c\x66\x91\x60\x47\x39\x63\x8b\xae\x46\x45\x76\x71\xb4\xb3\x84\x34\x2c\xb6\xbc\x63\x33\x64\x6b\x2e\x78\xcc\x39\xbc\xcc\xd5\xb4\xb0\xb7\x3c\xeb\x5f\x8c\x0f\x24\xa6\x62\x86\x90\x11\xa9\xa9\x75\x8e\x7b\x87\x21\x10\xa5\x50\x37\x4f\x75\x45\xd3\x80\xf0\x00\x99\x5f\xd9\xfb\xef\x47\xf0\x2f\x37\xc6\xe4\x1f\x1d\xb3\x0d\x53\xda\xd8\x04\x33\xc4\x4c\x62\x40\xfc\x27\xa0\xd9\xbb\xe6\x38\x11\x2c\x9c\xe2\xc2\x9c\x27\x36\x64\xb8\xa3\x39\xdd\x4a\xe9\xe6\x94\x31\x50\x42\x70\x98\x20\x6c\x80\x2f\x20\x63\x48\x14\x42\xae\xd0\x4a\x19\x38\x8e\xf3\x2d\x38\xa5\x91\xf8\xc3\xe9\xd3\xf5\xc3\xd5\xe3\xd5\xf3\xfd\xa3\x47\xc9\x7f\xd4\xfe\x83\x6b\xae\x25\x45\x05\x13\x64\x62\x6e\x97\x23\x30\xca\x11\x08\x4a\x3b\xab\x33\x94\xee\x14\xaf\x97\xdf\xfa\x57\xaf\xd8\x77\x42\x83\x2d\x34\x21\x90\x48\xb4\x99\x81\x8c\x04\x53\x12\xa3\xcb\xb6\xdc\xbb\x14\x95\x22\x71\x25\xac\x00\xe1\x61\x29\x27\x42\xf7\xc2\x3c\xb8\x80\x53\x6f\xe3\x51\xa8\xba\x1a\x55\x64\x17\x7f\x2c\x9b\x32\x7a\x0a\x83\xf6\xa3\xe9\x6a\x8c\xcc\xd9\x49\x96\xdc\x9e\x3c\x2d\xe6\x28\xd4\x96\xc5\x9e\xd6\x9a\xe8\x5c\x99\x4a\xf4\xc8\xb6\x1d\x85\xb4\xeb\xbc\x69\x49\xe3\x18\xe5\x29\xa6\x6e\x7f\xaa\xbe\x46\x45\x88\xe1\x29\x2d\xdb\x93\xaf\x6f\x84\x9f\x50\x1e\x9a\xbf\x4f\x18\x15\xf7\xa7\xac\x35\xb2\x92\xf1\x88\xc8\x1c\xdd\xc8\x43\xe4\xc1\xc2\x88\x86\x98\xdd\x11\x53\xf6\x1e\x39\x19\x6a\xcd\xc5\xde\x4c\xb3\x06\x97\x55\xce\x46\x93\x23\xe5\x3a\xcb\xf5\x6a\x05\xa3\xd1\xa8\xd1\x9e\x06\xb1\x16\x32\x1b\x96\xfa\x52\xd5\x0a\xb5\x10\x6d\xed\xa9\xbe\x84\x8d\xc2\x2d\xc4\xe5\x52\xef\xcb\xe9\x93\xeb\x48\x57\xee\xac\xa1\xb4\x3e\xf9\x16\xfa\xed\x15\xdd\x8b\xb9\x41\xb4\x96\x74\x53\x29\x18\xe9\xdd\x8b\xc9\xb6\xea\xa2\x4e\xa6\x96\xe6\xc7\xca\xa0\xe6\x8d\xe9\x65\xed\x05\xd1\x16\xd0\xdc\x0e\x7f\x5d\x26\xb6\xc6\x1b\x9f\xe0\xfb\xb5\xba\x44\x78\xbd\x3a\x36\xa1\xd2\xbf\xb2\xba\x4a\xb7\xdb\x3f\x34\x52\x77\x73\xcd\x1e\xe8\x2d\x27\x7c\x88\x0c\x4f\x53\xee\x1c\x8e\xa9\xab\x49\x47\x4e\xa2\x0f\xc5\xf3\xff\x02\x61\xc7\x9f\xc7\x2f\x10\x0e\x48\xd5\xd7\xa8\x23\x17\x08\x87\xe6\xeb\x6a\xde\xf1\xaf\x80\x0e\x48\x55\x6b\xd4\x97\xab\xc7\xbb\x9b\xbb\xef\x2e\xe1\x39\x41\x38\x77\xd7\xf2\xe7\xf0\xf3\xd5\xed\x0f\xeb\xeb\xbf\xc2\xa5\xc8\x35\xd5\xf6\x1b\xc2\xe6\xc6\x6f\x04\x0f\x9b\x1b\xbf\x73\xe3\xf4\xf3\xf2\x8a\x0f\x88\x19\xa8\x02\x49\x27\xee\xeb\x59\xf1\x29\xcd\x7d\x38\x6a\x28\x04\xde\x52\xa3\xae\xf3\x5e\xe6\x80\x27\x9c\xff\xc3\x51\xfa\xf2\xa8\xba\x1c\x33\x21\x0a\x26\x88\x7c\x2b\x37\x5a\x97\x4e\x8d\xd9\xd5\x30\xb8\x5a\xe5\x1e\x1a\x52\xef\xa1\x1a\xee\x87\xd9\xa8\xe6\x21\xd5\x3b\x80\x5a\xcf\xc5\x76\x39\x84\x5a\xc3\xb0\x1a\xd5\x7a\x55\x3a\xee\xab\xdb\x00\xc0\x5a\x05\x1f\x77\x8b\xe9\xa1\x8a\x0d\x00\xaa\x55\xe8\xea\xf5\x45\xc2\x50\x95\x06\x41\x75\x08\x1c\x9b\x0c\xbd\x1e\xae\x2c\x2c\xbb\xc7\x8e\x7e\x88\x6d\x1b\xa0\x38\x3a\xaa\x68\x45\xf5\xd7\x69\xcd\x37\x8b\x37\xae\x22\x93\x45\xf6\xa2\xed\x20\xd8\xb2\x4a\xca\x16\x94\x1e\xa4\x1d\x85\x6b\x89\x37\xdf\xe1\x29\x9f\x89\xa9\xfb\x04\xe8\x12\xb1\x04\xf9\x89\x72\xc2\x13\x2b\xd1\x9c\x53\xdd\x12\x1e\x12\x2d\xe4\x02\x22\x8a\x2c\x84\x32\xa8\xff\xe4\x9a\x08\x21\xcd\x95\x86\x09\x9a\xba\xa3\x43\x3e\xd4\x13\xad\x59\xb5\x5d\xe1\xb2\xa5\x89\xcc\x5c\x6e\x64\xdc\x16\xe4\x52\x9a\x3a\x7c\x73\xa3\x5a\x74\x3f\x76\x50\x76\x6f\xfc\x61\x9e\xfd\x81\x06\xc8\x15\x1e\xc8\xb3\x1e\xb4\x6e\x9e\x2d\x85\x8f\xe5\xd9\xc1\xf8\xcd\xea\x97\xb0\xb6\xb1\xcc\x3e\xde\x7c\x5e\xad\x4a\x16\x02\xae\x09\x4d\x70\xec\xa0\x6a\x2f\xac\xfa\x16\x06\x4c\x85\x5c\x3c\xd1\xdf\xd1\x54\xe2\xb6\xd3\x4d\x6d\xf5\xb9\xa9\x44\xe4\x2c\x34\x93\x43\xb8\xed\x78\x31\x9b\x7a\x82\x7a\x6e\x22\xd6\xa7\x6f\xfe\x6e\xb7\xef\xdf\x3e\x7d\xe3\xd7\xf6\xa0\x14\xb5\x46\x68\x9a\xa2\xc8\xf5\x20\xf8\x8f\x1f\x2d\xfc\x5f\x3f\x9a\x7f\x7e\x23\x0e\x4a\x51\x6b\x04\x13\xf1\x50\x1f\x39\xfc\x4f\x0d\xea\x1f\x08\xbc\x6d\x65\x5b\x64\x28\x5b\x26\xb9\x4b\x2b\xd6\xcd\x7e\x09\xe1\x31\x99\x30\x34\x75\xa2\x16\xc0\xc5\xfc\x02\xe6\x09\xb5\xfd\xb4\x8c\x19\xfa\x4a\x47\x65\xeb\xca\x3f\x20\x57\x7d\x52\x53\xb4\xda\x95\x1d\xdc\x24\xcb\x58\xd9\x95\x69\x8e\xef\xcc\xa6\x4d\xee\x96\xdb\xec\x39\x5e\xe9\x18\x72\x5d\x3c\xc4\xb5\x8f\x6e\x7e\xfe\x96\x32\xdb\xf4\xba\xd3\x4d\xac\x3b\x31\x95\x4d\xdf\x2b\x47\xb6\xdd\x30\x54\x50\x95\x3f\x16\x44\xbe\xfb\xe9\x3f\x84\x69\xcd\x6b\xb1\x4a\x54\xa3\x7f\x97\x06\xab\x4c\x8a\xdf\x30\xd0\xd5\x96\xaa\x96\x45\x79\x1c\xd2\x8e\x5f\x09\x5c\x0b\x9f\xbd\xb2\xa1\xa8\x1a\x2f\xf0\x21\xcc\xa5\xc9\xd1\x52\xc2\x49\x8c\x61\xb5\xd5\xed\x48\x1f\x9f\xdf\xad\xba\xf5\x89\xb6\xfd\xdf\x14\x95\x7e\xf3\x6a\xba\xee\xa2\x88\xbd\x13\x73\x36\xd8\x5e\xd0\x6a\x52\x50\xce\xe1\x72\x39\x2a\x1e\xeb\xd6\xf5\x1a\x67\x82\xd5\x2f\x82\x4d\xd1\xef\xed\xf5\x6a\x71\x97\xae\xab\xe4\xde\x85\xc3\xde\x4e\xb3\x16\x97\x55\x3e\xb6\x17\x8f\xef\xc5\x65\x6f\xa7\x99\x71\xd9\xd9\xaf\x67\xff\x0b\x00\x00\xff\xff\xd9\x21\x10\x90\x94\x38\x00\x00")

func wski18nResourcesEn_usAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesEn_usAllJson,
		"wski18n/resources/en_US.all.json",
	)
}

func wski18nResourcesEn_usAllJson() (*asset, error) {
	bytes, err := wski18nResourcesEn_usAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/en_US.all.json", size: 14484, mode: os.FileMode(420), modTime: time.Unix(1515453159, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesEs_esAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesEs_esAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesEs_esAllJson,
		"wski18n/resources/es_ES.all.json",
	)
}

func wski18nResourcesEs_esAllJson() (*asset, error) {
	bytes, err := wski18nResourcesEs_esAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/es_ES.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesFr_frAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\xe6\x52\x50\xa8\xe6\x52\x50\x50\x50\x50\xca\x4c\x51\xb2\x52\x50\x4a\xaa\x2c\x48\x2c\x2e\x56\x48\x4e\x2d\x2a\xc9\x4c\xcb\x4c\x4e\x2c\x49\x55\x48\xce\x48\x4d\xce\xce\xcc\x4b\x57\xd2\x81\x28\x2c\x29\x4a\xcc\x2b\xce\x49\x2c\xc9\xcc\xcf\x03\xe9\x08\xce\xcf\x4d\x55\x40\x12\x53\xc8\xcc\x53\x70\x2b\x4a\xcd\x4b\xce\x50\xe2\x52\x50\xa8\xe5\x8a\xe5\x02\x04\x00\x00\xff\xff\x45\xa4\xe9\x62\x65\x00\x00\x00")

func wski18nResourcesFr_frAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesFr_frAllJson,
		"wski18n/resources/fr_FR.all.json",
	)
}

func wski18nResourcesFr_frAllJson() (*asset, error) {
	bytes, err := wski18nResourcesFr_frAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/fr_FR.all.json", size: 101, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesIt_itAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesIt_itAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesIt_itAllJson,
		"wski18n/resources/it_IT.all.json",
	)
}

func wski18nResourcesIt_itAllJson() (*asset, error) {
	bytes, err := wski18nResourcesIt_itAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/it_IT.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesJa_jaAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesJa_jaAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesJa_jaAllJson,
		"wski18n/resources/ja_JA.all.json",
	)
}

func wski18nResourcesJa_jaAllJson() (*asset, error) {
	bytes, err := wski18nResourcesJa_jaAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/ja_JA.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesKo_krAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesKo_krAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesKo_krAllJson,
		"wski18n/resources/ko_KR.all.json",
	)
}

func wski18nResourcesKo_krAllJson() (*asset, error) {
	bytes, err := wski18nResourcesKo_krAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/ko_KR.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesPt_brAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesPt_brAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesPt_brAllJson,
		"wski18n/resources/pt_BR.all.json",
	)
}

func wski18nResourcesPt_brAllJson() (*asset, error) {
	bytes, err := wski18nResourcesPt_brAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/pt_BR.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesZh_hansAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesZh_hansAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesZh_hansAllJson,
		"wski18n/resources/zh_Hans.all.json",
	)
}

func wski18nResourcesZh_hansAllJson() (*asset, error) {
	bytes, err := wski18nResourcesZh_hansAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/zh_Hans.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesZh_hantAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesZh_hantAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesZh_hantAllJson,
		"wski18n/resources/zh_Hant.all.json",
	)
}

func wski18nResourcesZh_hantAllJson() (*asset, error) {
	bytes, err := wski18nResourcesZh_hantAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/zh_Hant.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"wski18n/resources/de_DE.all.json": wski18nResourcesDe_deAllJson,
	"wski18n/resources/en_US.all.json": wski18nResourcesEn_usAllJson,
	"wski18n/resources/es_ES.all.json": wski18nResourcesEs_esAllJson,
	"wski18n/resources/fr_FR.all.json": wski18nResourcesFr_frAllJson,
	"wski18n/resources/it_IT.all.json": wski18nResourcesIt_itAllJson,
	"wski18n/resources/ja_JA.all.json": wski18nResourcesJa_jaAllJson,
	"wski18n/resources/ko_KR.all.json": wski18nResourcesKo_krAllJson,
	"wski18n/resources/pt_BR.all.json": wski18nResourcesPt_brAllJson,
	"wski18n/resources/zh_Hans.all.json": wski18nResourcesZh_hansAllJson,
	"wski18n/resources/zh_Hant.all.json": wski18nResourcesZh_hantAllJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"wski18n": &bintree{nil, map[string]*bintree{
		"resources": &bintree{nil, map[string]*bintree{
			"de_DE.all.json": &bintree{wski18nResourcesDe_deAllJson, map[string]*bintree{}},
			"en_US.all.json": &bintree{wski18nResourcesEn_usAllJson, map[string]*bintree{}},
			"es_ES.all.json": &bintree{wski18nResourcesEs_esAllJson, map[string]*bintree{}},
			"fr_FR.all.json": &bintree{wski18nResourcesFr_frAllJson, map[string]*bintree{}},
			"it_IT.all.json": &bintree{wski18nResourcesIt_itAllJson, map[string]*bintree{}},
			"ja_JA.all.json": &bintree{wski18nResourcesJa_jaAllJson, map[string]*bintree{}},
			"ko_KR.all.json": &bintree{wski18nResourcesKo_krAllJson, map[string]*bintree{}},
			"pt_BR.all.json": &bintree{wski18nResourcesPt_brAllJson, map[string]*bintree{}},
			"zh_Hans.all.json": &bintree{wski18nResourcesZh_hansAllJson, map[string]*bintree{}},
			"zh_Hant.all.json": &bintree{wski18nResourcesZh_hantAllJson, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

