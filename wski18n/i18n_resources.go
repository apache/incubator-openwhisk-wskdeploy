// Code generated by go-bindata.
// sources:
// wski18n/resources/de_DE.all.json
// wski18n/resources/en_US.all.json
// wski18n/resources/es_ES.all.json
// wski18n/resources/fr_FR.all.json
// wski18n/resources/it_IT.all.json
// wski18n/resources/ja_JA.all.json
// wski18n/resources/ko_KR.all.json
// wski18n/resources/pt_BR.all.json
// wski18n/resources/zh_Hans.all.json
// wski18n/resources/zh_Hant.all.json
// DO NOT EDIT!

package wski18n

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _wski18nResourcesDe_deAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesDe_deAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesDe_deAllJson,
		"wski18n/resources/de_DE.all.json",
	)
}

func wski18nResourcesDe_deAllJson() (*asset, error) {
	bytes, err := wski18nResourcesDe_deAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/de_DE.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesEn_usAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x5f\x6f\xe3\xb8\x11\x7f\xcf\xa7\x18\xec\x4b\x5a\x20\x70\x77\xaf\x28\x50\x2c\x50\x14\x41\x93\x5e\xd3\xbb\x4d\x16\x49\xf6\x16\x87\xeb\xc2\xa1\xa5\xb1\xcd\xb3\x44\x0a\x24\x15\xaf\xd7\xf0\x77\x2f\x86\x14\x65\xd9\x11\x25\x59\xfe\x93\x45\xd1\x3c\xc9\x2b\xce\xef\x37\x33\x24\x67\x86\xd4\xec\x6f\x67\x00\xcb\x33\x00\x80\x37\x3c\x7e\xf3\x1e\xde\xa4\x7a\x32\xcc\x14\x8e\xf9\xd7\x21\x2a\x25\xd5\x9b\x0b\xf7\xd6\x28\x26\x74\xc2\x0c\x97\x82\x86\x5d\xdb\x77\x67\x00\xab\x8b\x06\x84\x39\x53\x82\x8b\x49\x00\xe3\x73\xf1\xb6\x0d\x45\xe7\x51\x84\x5a\x07\x50\x1e\x8a\xb7\x6d\x28\x5c\x8c\x65\x00\xe2\x86\x5e\x05\xe5\x7f\xd7\x52\x0c\x53\xae\x35\x17\x93\x61\x94\xc6\xc3\x19\x2e\x02\x40\xff\x7e\xb8\xbb\x05\x2e\xb2\xdc\x40\xcc\x0c\x83\x0f\x4e\x0a\xce\xa3\x34\x3e\x07\x92\x0b\xb2\x10\xf0\x38\x61\x93\xa1\x60\x29\xea\x8c\x45\x18\xe0\x58\xbf\x6f\xc7\x62\xb9\x99\x36\xa8\x4b\xaf\xa5\xe2\xdf\xec\x3f\xc0\xd3\x4f\xd7\xbf\x3e\x75\x01\xcd\xf8\x70\x2a\xb5\x09\x80\xce\xa7\x5c\xcf\xe0\xf2\xe3\x0d\x3c\xfd\xeb\xee\xe1\xb1\x2b\xe2\x33\x2a\x4d\x08\xad\xa0\xbf\x5c\xdf\x3f\xdc\xdc\xdd\x76\xc1\x9d\xe1\x62\x38\xe6\x49\xc8\x93\x19\x33\x53\x90\x63\x30\x53\x84\xc1\x0c\x17\x60\xc7\xb6\xc3\x46\xa8\x4c\x67\x5c\x1a\xdc\x02\x9c\x32\xc1\xc7\xa8\xcd\x50\x48\x33\x1c\xcb\x5c\xc4\x01\xe0\x0f\xc5\x40\x8b\x07\x42\x1a\xb0\xa3\x81\x19\xb0\x9c\xbf\x2d\x97\x03\x7a\x58\xad\xbe\x0c\xfe\x23\xc2\x84\xb9\x5d\xca\x25\x6d\x8c\x59\x22\x43\x6b\xe4\x93\x5d\xc0\x15\x64\x18\x4b\x05\x4e\x24\x45\x61\x76\x21\xca\x45\x0f\x2a\x2f\xd4\x4a\xa6\x72\x61\x78\x8a\xb4\x55\x53\x66\xa2\x69\x80\xe5\xde\x0d\xb3\x3c\x85\x08\x51\xe9\x0c\x23\x3e\xe6\x18\x03\x17\xe0\x35\x86\x58\xa2\xb6\x8e\xb6\x88\x30\xe7\x66\x0a\x2c\xb2\xdb\x45\xcb\x5c\x45\xe8\xa6\x02\xbf\x1a\x14\xb4\x7c\x2d\x2a\x7e\x35\x5e\xf9\x62\x2c\xfd\xab\x7b\x6c\x9b\x1a\x6f\x44\x34\x65\x62\x82\xa1\x85\xe0\x6d\x28\x46\x81\x91\xdb\xe6\x8c\x98\xc6\x18\xa4\xb0\x8b\xb0\x51\xe3\xbd\xd4\xcc\x85\xce\xb3\x4c\x2a\xd3\xaa\x6a\x27\x77\x73\xe7\xec\x12\xd3\x2a\x57\xb1\xa0\xbb\x82\x6e\xd4\x30\xe1\x29\x37\x43\x3e\x11\x52\x05\x35\xbc\x11\xcf\x2c\xe1\xb1\xe7\xb0\x22\x96\xc9\x3e\x91\xb2\x5b\x2a\x16\x70\x8d\xfc\x91\x14\x63\x3e\x29\xd3\x06\x45\xda\x70\x1c\x7e\x24\x0b\x73\x33\x45\x61\x78\xe4\x82\x31\x85\xa3\xc2\x1b\x0e\x2a\xdf\x95\x31\xe3\x0d\x41\x9a\x18\x29\x9a\xd2\x90\xfd\x78\xda\xd2\x15\x31\x95\x63\xfa\x51\x15\xa6\x34\x65\xf0\x6d\x7b\x96\xcb\x01\x3d\xae\x56\x17\x30\x56\x32\xa5\xdf\x6e\xf5\xaf\x56\x9d\x18\xdd\x74\xb5\x31\xd2\x30\x3f\x53\x1a\x4d\x3f\xae\xd2\x39\x6d\x6c\x1b\x5e\x5c\x2e\x07\xe5\xef\x9d\xad\x44\xa5\x86\x13\x34\x7e\x17\x87\x2a\xab\x7f\x32\x9e\xb8\xe0\x32\x41\x63\xb7\xe1\x7a\x63\x7a\x51\x47\x7c\x97\xa1\xf8\x6c\x53\xb4\x46\xf5\xcc\x23\x7c\x4f\xba\xa0\x52\x55\x45\x6a\x13\x84\x48\x99\xd2\x53\x96\x24\xc3\x44\x46\x2c\x09\x65\x06\x3f\xac\xc2\x44\xde\x72\xec\x56\x12\x9e\x59\x92\xa3\x6e\x4e\x47\x6b\x36\x81\x66\x2e\xd5\xac\x17\x1f\x17\x06\x95\xc0\xe6\x6c\xb4\x4e\x5a\xc3\x4c\xc9\x34\x0b\xed\xc4\x2b\x09\x0b\x99\x83\x42\x96\x24\x0b\x98\x33\x61\xc8\xe1\x4e\x1a\xcc\x94\xeb\xbf\xc3\x1f\x16\x7f\xba\xfd\xe3\x7b\xe8\xc4\x65\x6b\x65\x8c\x83\xc1\xee\xaa\x1c\x0a\x91\x4c\xb3\x04\x69\x32\x8b\x02\x7b\x9c\x27\xc9\xa2\xab\x51\x63\xbb\x38\xda\x59\x62\x1e\x17\x5b\xde\xb1\x11\x59\xc9\x05\xf7\xb9\x80\xa7\xb9\x9e\x15\xf6\xfa\x5c\xff\x44\x3e\x50\x98\xca\x67\x84\x8c\x29\xc3\xad\x73\xdc\x3b\x8c\x81\x69\x8d\xa6\x79\xaa\x2b\x9a\x46\x4c\x44\x98\x84\x95\xbd\xfb\x69\x00\xff\x70\x63\xa8\xfe\xe8\x5a\xda\x54\xca\x12\xaa\x70\xd8\x04\xe3\x66\xa7\x7c\xaa\x48\x50\x79\x18\xa3\xf3\x3e\x45\x7d\xc3\x51\x37\xba\x0a\xe2\x5c\x91\x76\x05\x53\x55\xcb\xe3\x39\x91\x8e\x6f\xb6\x88\x8e\x31\x53\x18\x31\x83\xf1\x50\x61\x96\xb0\x28\x68\x24\x05\x2a\xca\x9d\x32\x89\x67\xb8\xa0\xe4\x69\xe3\xa3\xab\x43\x96\xcb\x01\x15\x1f\x66\x91\xe1\x6a\xe5\xea\x90\x39\x4f\x12\xd0\x52\x0a\x18\x21\xac\x69\x2e\x20\x4b\x90\x69\x84\x5c\xa3\x15\x25\x4c\x81\xf3\x0d\x4c\x6d\x90\x6d\x26\x90\xed\x20\xe7\x93\x54\xca\x44\xcc\x8c\x54\x8b\x86\xc3\x10\x69\x5e\x8e\xb3\x0c\xc4\x59\x10\x72\x0d\x05\xd6\xa0\x39\xac\xfa\xe2\xd3\x86\x75\xda\xf9\xbf\x63\xd4\x94\x84\x3d\x85\x8d\xee\x31\xfd\x8c\xe9\x69\xb5\x22\x9f\x55\xd6\x8b\x75\x16\x29\x14\xfb\xda\x78\xab\x34\x35\x45\x86\x20\x88\xd4\x41\xac\x36\x0a\x97\x12\x21\xf5\x47\x84\xb6\xdd\x43\x9e\x8b\x31\x43\x11\xa3\x88\x42\x6e\xbb\xf2\x43\x61\x3d\xd4\xcd\x96\xd5\xe1\xcb\x60\xd0\xc0\xe3\x97\x6a\x27\xa6\x4f\xeb\xc1\xbb\x72\x3d\x5c\x7f\xbc\xbc\xbf\x7c\xbc\xbb\x0f\x40\xff\xad\xf6\x0f\xae\x85\x51\xb4\x31\x47\x98\xc8\xb9\x0d\xc6\x90\x70\x81\xc0\x50\x59\xcf\x3f\xa3\x72\x35\x6c\xbd\xfc\xc6\x5f\xbd\x62\x3f\x4a\x03\xf6\x9a\x05\x22\x85\xcc\x90\x69\x19\x8b\x66\x6c\x82\xee\xac\xe1\xde\xa5\xa8\x35\x9b\x54\x92\x2a\x30\x11\x7b\x39\x19\xbb\x17\xf4\xe0\xd2\x6d\xbd\x8d\x47\xa1\xea\x6a\x54\x51\x5b\xff\x6f\xd9\x94\xf1\x53\x18\xb4\x1f\x4d\x57\x63\x54\x9e\x9c\x64\xc9\xed\xc9\xd3\x62\x8e\x46\x63\x59\x6c\xad\x6a\x98\xc9\x35\x25\xda\x23\xdb\x76\x14\xd2\xae\xf3\x66\x14\x9f\x4c\x50\x9d\x62\xea\xf6\xa7\xda\xd5\xa8\x31\x62\x7c\x4a\xcb\xf6\xe4\xdb\x35\xc2\x8f\xb8\x88\xe9\xf7\x09\xa3\xe2\xfe\x94\xb5\x46\x5e\x6d\x15\xb6\x65\x72\xa6\x82\x05\xb3\x5b\x57\xd1\x1c\xf7\x28\xd0\x7a\x12\x79\x35\xcd\x1a\x5c\x56\xc9\x8d\x54\x34\xe7\x26\xcb\xcd\x6a\x05\x54\xc8\xb4\x95\x5b\x01\xb1\x16\x32\x1b\x96\x76\xa5\xaa\x15\x6a\x21\xda\xd8\x53\xbb\x12\x36\x0a\xb7\x10\xfb\xa5\xbe\x2b\x67\x48\xae\x23\x9d\xdf\x59\x7d\x69\x43\xf2\xb5\xf4\xeb\x23\x2b\x89\x6c\xdf\x90\xb7\x1d\x73\xeb\x64\x6a\x69\x36\x4e\xac\x8d\x7b\x24\xc8\xba\x13\x44\x5b\x6c\x71\x9b\xed\xe5\x7d\x45\xeb\xd6\x0f\x09\x7e\xbf\x56\xbf\xbc\x2c\xe8\x11\xb9\xba\xe9\xb7\x07\x7a\x4b\xc6\xb3\x37\x1c\x27\x29\xff\x0f\xc7\xd4\xd5\xa4\x23\x17\x95\x87\xe2\xf9\x7f\xc1\xbc\xe5\xcf\xe3\x17\xcc\x07\xa4\xda\xd5\xa8\x23\x17\xcc\x87\xe6\xeb\x6a\xde\xf1\xaf\x44\x0e\x48\x55\x6b\xd4\xe7\xcb\xfb\xdb\x9b\xdb\x1f\xdf\xc3\xe3\x14\xe1\xdc\x7d\xa4\x39\x87\x5f\x2f\x3f\xfc\x5c\xde\x8f\x16\x2e\xb5\xb7\xc1\xf6\x8b\xd2\xfa\x36\x74\x00\x1f\xd7\xb7\xa1\xe7\xe4\xf4\x73\x7f\xfd\x09\x8c\x06\xea\x48\xf1\x91\xfb\x96\x5a\x7c\x58\x75\x9f\x11\x1b\x0a\xe3\xd7\xd4\xa8\xeb\xbc\xfb\x9a\xe8\x84\xf3\x7f\x38\xca\x50\x31\x53\x49\xb4\x65\xa1\x37\x65\x1a\x46\x88\x62\xa3\x40\x29\x8f\x12\x8d\x25\x4e\x3f\xb8\x5a\xe5\x3e\x36\x94\xa2\x7d\x35\xdc\x0f\xb3\x51\xcd\x43\xaa\x77\x00\xb5\x1e\x8b\xed\x72\x08\xb5\xfa\x61\x35\xaa\xf5\xe2\x28\xb5\xaf\x6e\x3d\x00\x6b\x15\xbc\xdf\x3e\x5c\xf6\x55\xac\x07\x50\xad\x42\x97\x2f\x0f\xd6\x7d\x55\xea\x05\xd5\x21\x70\xac\x2b\xf4\x7a\x38\x7f\xba\xeb\x1e\x3b\x76\x43\x6c\xdb\x00\x45\xea\xa8\xa2\x15\x47\xb0\x4e\x6b\xbe\x59\xbc\x71\x15\x51\x15\xb9\x13\x6d\x07\xc1\x96\x55\xe2\x1b\x92\x76\x20\xed\x28\x5c\x4b\xbc\xee\xca\xe0\xe2\x59\xce\xdc\xe7\x51\x57\x88\x4d\x51\x9c\xa8\x26\x3c\xb1\x12\xcd\x35\xd5\x87\xf2\xab\xed\x98\x63\x12\x83\x0f\xea\xbf\xb8\x96\x52\x48\x73\x6d\x60\x84\x74\xee\xe8\x50\x0f\xed\x88\xd6\xac\xda\xb6\xb0\x6f\x70\x63\xcf\xae\x36\x22\xb7\x45\xb9\x52\x74\x0e\x5f\xdf\x30\x16\xbd\xb0\x1d\x94\xdd\x1b\xbf\x9f\x67\x7f\xe6\x11\x0a\x8d\x07\xf2\x6c\x00\xad\x9b\x67\xbd\xf0\xb1\x3c\xdb\x1b\xbf\x59\x7d\x0f\x6b\xdb\x0c\xed\xe3\xcd\xd5\x6a\xe5\x59\x18\xb8\x96\x44\x29\xb0\x83\xaa\x3b\x61\xd5\x7f\x8b\xc7\x54\xaa\xc5\x03\xff\x86\x74\x12\xb7\x7d\x8f\x7a\xa3\x79\x40\x4f\x65\x9e\xc4\x34\x39\x4c\xd8\xfe\x27\xda\xd4\x23\x34\x73\x8a\x58\xef\x7e\xf8\xab\xdd\xbe\x7f\x79\xf7\x43\x58\xdb\x83\x52\xd4\x1a\x61\x78\x8a\x32\x37\xbd\xe0\xdf\xbe\xb5\xf0\x7f\x7e\x4b\x7f\x61\x23\x0e\x4a\x51\x6b\x44\x22\x27\x7d\x7d\xe4\xf0\xdf\x35\xa8\x7f\x20\xf0\xb6\x95\x6d\x91\xc1\x37\xd0\x16\xed\x2c\x65\xeb\xe7\x94\x89\x09\x1b\x25\x48\xe7\x44\x23\x41\xc8\xf9\x05\xcc\xa7\xdc\x76\x57\x27\x09\xd1\x57\xfa\x6b\x5b\x57\xfe\x01\xb9\x9a\xcd\x62\x59\x96\xf8\xe6\xdc\x9a\xd6\x9c\x2e\x7d\x4c\x45\x37\x50\xb5\x73\xa9\xc5\xbe\xe3\x90\xd6\x97\x15\xf6\x7f\x12\x54\x7a\xad\xab\xc5\x89\xf3\x99\xbd\x01\x70\x3d\x6b\xb6\x0f\xb2\x1a\x02\x3d\xcd\x72\x39\x28\x1e\xeb\xda\x8f\x4a\x9c\x11\x56\x3f\x42\x34\xcd\xf5\xeb\xeb\xd5\xe2\x2e\x53\x57\xb7\x7e\x17\x0e\x7b\x3d\xcd\x5a\x5c\x56\xf9\xd4\x56\x3c\x7e\x2f\x2e\x7b\x3d\xcd\xc8\x65\x67\x5f\xce\xfe\x1b\x00\x00\xff\xff\xf1\x93\xc1\xb9\x90\x37\x00\x00")

func wski18nResourcesEn_usAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesEn_usAllJson,
		"wski18n/resources/en_US.all.json",
	)
}

func wski18nResourcesEn_usAllJson() (*asset, error) {
	bytes, err := wski18nResourcesEn_usAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/en_US.all.json", size: 14224, mode: os.FileMode(420), modTime: time.Unix(1515510234, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesEs_esAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesEs_esAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesEs_esAllJson,
		"wski18n/resources/es_ES.all.json",
	)
}

func wski18nResourcesEs_esAllJson() (*asset, error) {
	bytes, err := wski18nResourcesEs_esAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/es_ES.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesFr_frAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\xe6\x52\x50\xa8\xe6\x52\x50\x50\x50\x50\xca\x4c\x51\xb2\x52\x50\x4a\xaa\x2c\x48\x2c\x2e\x56\x48\x4e\x2d\x2a\xc9\x4c\xcb\x4c\x4e\x2c\x49\x55\x48\xce\x48\x4d\xce\xce\xcc\x4b\x57\xd2\x81\x28\x2c\x29\x4a\xcc\x2b\xce\x49\x2c\xc9\xcc\xcf\x03\xe9\x08\xce\xcf\x4d\x55\x40\x12\x53\xc8\xcc\x53\x70\x2b\x4a\xcd\x4b\xce\x50\xe2\x52\x50\xa8\xe5\x8a\xe5\x02\x04\x00\x00\xff\xff\x45\xa4\xe9\x62\x65\x00\x00\x00")

func wski18nResourcesFr_frAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesFr_frAllJson,
		"wski18n/resources/fr_FR.all.json",
	)
}

func wski18nResourcesFr_frAllJson() (*asset, error) {
	bytes, err := wski18nResourcesFr_frAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/fr_FR.all.json", size: 101, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesIt_itAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesIt_itAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesIt_itAllJson,
		"wski18n/resources/it_IT.all.json",
	)
}

func wski18nResourcesIt_itAllJson() (*asset, error) {
	bytes, err := wski18nResourcesIt_itAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/it_IT.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesJa_jaAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesJa_jaAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesJa_jaAllJson,
		"wski18n/resources/ja_JA.all.json",
	)
}

func wski18nResourcesJa_jaAllJson() (*asset, error) {
	bytes, err := wski18nResourcesJa_jaAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/ja_JA.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesKo_krAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesKo_krAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesKo_krAllJson,
		"wski18n/resources/ko_KR.all.json",
	)
}

func wski18nResourcesKo_krAllJson() (*asset, error) {
	bytes, err := wski18nResourcesKo_krAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/ko_KR.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesPt_brAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesPt_brAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesPt_brAllJson,
		"wski18n/resources/pt_BR.all.json",
	)
}

func wski18nResourcesPt_brAllJson() (*asset, error) {
	bytes, err := wski18nResourcesPt_brAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/pt_BR.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesZh_hansAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesZh_hansAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesZh_hansAllJson,
		"wski18n/resources/zh_Hans.all.json",
	)
}

func wski18nResourcesZh_hansAllJson() (*asset, error) {
	bytes, err := wski18nResourcesZh_hansAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/zh_Hans.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesZh_hantAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesZh_hantAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesZh_hantAllJson,
		"wski18n/resources/zh_Hant.all.json",
	)
}

func wski18nResourcesZh_hantAllJson() (*asset, error) {
	bytes, err := wski18nResourcesZh_hantAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/zh_Hant.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"wski18n/resources/de_DE.all.json": wski18nResourcesDe_deAllJson,
	"wski18n/resources/en_US.all.json": wski18nResourcesEn_usAllJson,
	"wski18n/resources/es_ES.all.json": wski18nResourcesEs_esAllJson,
	"wski18n/resources/fr_FR.all.json": wski18nResourcesFr_frAllJson,
	"wski18n/resources/it_IT.all.json": wski18nResourcesIt_itAllJson,
	"wski18n/resources/ja_JA.all.json": wski18nResourcesJa_jaAllJson,
	"wski18n/resources/ko_KR.all.json": wski18nResourcesKo_krAllJson,
	"wski18n/resources/pt_BR.all.json": wski18nResourcesPt_brAllJson,
	"wski18n/resources/zh_Hans.all.json": wski18nResourcesZh_hansAllJson,
	"wski18n/resources/zh_Hant.all.json": wski18nResourcesZh_hantAllJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"wski18n": &bintree{nil, map[string]*bintree{
		"resources": &bintree{nil, map[string]*bintree{
			"de_DE.all.json": &bintree{wski18nResourcesDe_deAllJson, map[string]*bintree{}},
			"en_US.all.json": &bintree{wski18nResourcesEn_usAllJson, map[string]*bintree{}},
			"es_ES.all.json": &bintree{wski18nResourcesEs_esAllJson, map[string]*bintree{}},
			"fr_FR.all.json": &bintree{wski18nResourcesFr_frAllJson, map[string]*bintree{}},
			"it_IT.all.json": &bintree{wski18nResourcesIt_itAllJson, map[string]*bintree{}},
			"ja_JA.all.json": &bintree{wski18nResourcesJa_jaAllJson, map[string]*bintree{}},
			"ko_KR.all.json": &bintree{wski18nResourcesKo_krAllJson, map[string]*bintree{}},
			"pt_BR.all.json": &bintree{wski18nResourcesPt_brAllJson, map[string]*bintree{}},
			"zh_Hans.all.json": &bintree{wski18nResourcesZh_hansAllJson, map[string]*bintree{}},
			"zh_Hant.all.json": &bintree{wski18nResourcesZh_hantAllJson, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

