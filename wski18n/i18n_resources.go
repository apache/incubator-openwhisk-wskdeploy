// Code generated by go-bindata.
// sources:
// wski18n/resources/de_DE.all.json
// wski18n/resources/en_US.all.json
// wski18n/resources/es_ES.all.json
// wski18n/resources/fr_FR.all.json
// wski18n/resources/it_IT.all.json
// wski18n/resources/ja_JA.all.json
// wski18n/resources/ko_KR.all.json
// wski18n/resources/pt_BR.all.json
// wski18n/resources/zh_Hans.all.json
// wski18n/resources/zh_Hant.all.json
// DO NOT EDIT!

package wski18n

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _wski18nResourcesDe_deAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesDe_deAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesDe_deAllJson,
		"wski18n/resources/de_DE.all.json",
	)
}

func wski18nResourcesDe_deAllJson() (*asset, error) {
	bytes, err := wski18nResourcesDe_deAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/de_DE.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesEn_usAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x5f\x6f\xe3\xb8\x11\x7f\xcf\xa7\x18\xec\x4b\x5a\x20\x70\x77\xaf\x28\x50\x2c\x50\x14\x41\x37\xbd\xa6\x77\x9b\x2c\x92\xdc\x2d\x0e\xd7\x83\x43\x4b\x63\x8b\x67\x8a\x14\x48\xca\x5e\xaf\xe1\xef\x5e\x0c\x29\xd9\xb2\x23\x51\xb2\xfc\x27\x8b\xa2\x79\x92\x57\x9c\xdf\x6f\x66\x48\xce\x0c\xa9\xd9\x5f\x2f\x00\x96\x17\x00\x00\x6f\x78\xfc\xe6\x3d\xbc\x49\xcd\x64\x98\x69\x1c\xf3\x2f\x43\xd4\x5a\xe9\x37\x57\xfe\xad\xd5\x4c\x1a\xc1\x2c\x57\x92\x86\xdd\xb8\x77\x17\x00\xab\xab\x00\xc2\x9c\x69\xc9\xe5\xa4\x01\xe3\x73\xf1\xb6\x0d\xc5\xe4\x51\x84\xc6\x34\xa0\x3c\x16\x6f\xdb\x50\xb8\x1c\xab\x06\x88\x5b\x7a\xd5\x28\xff\xbb\x51\x72\x98\x72\x63\xb8\x9c\x0c\xa3\x34\x1e\x4e\x71\xd1\x00\xf4\xef\xc7\xfb\x3b\xe0\x32\xcb\x2d\xc4\xcc\x32\xf8\xe8\xa5\xe0\x32\x4a\xe3\x4b\x20\xb9\x46\x16\x02\x1e\x0b\x36\x19\x4a\x96\xa2\xc9\x58\x84\x0d\x1c\x9b\xf7\xed\x58\x2c\xb7\x49\x40\x5d\x7a\xad\x34\xff\xea\xfe\x01\x9e\x7f\xb8\xf9\xe5\xb9\x0b\x68\xc6\x87\x89\x32\xb6\x01\x74\x9e\x70\x33\x85\xeb\x4f\xb7\xf0\xfc\xaf\xfb\xc7\xa7\xae\x88\x33\xd4\x86\x10\x5a\x41\x7f\xbe\x79\x78\xbc\xbd\xbf\xeb\x82\x3b\xc5\xc5\x70\xcc\x45\x93\x27\x33\x66\x13\x50\x63\xb0\x09\xc2\x60\x8a\x0b\x70\x63\xdb\x61\x23\xd4\xb6\x33\x2e\x0d\x6e\x01\x4e\x99\xe4\x63\x34\x76\x28\x95\x1d\x8e\x55\x2e\xe3\x06\xe0\x8f\xc5\x40\x87\x07\x52\x59\x70\xa3\x81\x59\x70\x9c\xbf\x2e\x97\x03\x7a\x58\xad\x7e\x1b\xfc\x47\x36\x13\xe6\x6e\x29\xaf\x69\x63\xcc\x84\x6a\x5a\x23\x3f\xb9\x05\x5c\x41\x86\xb1\xd2\xe0\x45\x52\x94\x76\x1f\xa2\x5c\xf6\xa0\x2a\x85\x5a\xc9\x74\x2e\x2d\x4f\x91\xb6\x6a\xca\x6c\x94\x34\xb0\x3c\xf8\x61\x8e\xa7\x10\x21\x2a\x93\x61\xc4\xc7\x1c\x63\xe0\x12\x4a\x8d\x21\x56\x68\x9c\xa3\x1d\x22\xcc\xb9\x4d\x80\x45\x6e\xbb\x18\x95\xeb\x08\xfd\x54\xe0\x17\x8b\x92\x96\xaf\x43\xc5\x2f\xb6\x54\xbe\x18\x4b\xff\xea\x1f\xdb\xa6\xa6\x34\x22\x4a\x98\x9c\x60\xd3\x42\x28\x6d\x28\x46\x81\x55\xbb\xe6\x8c\x98\xc1\x18\x94\x74\x8b\x30\xa8\xf1\x41\x6a\xe6\xd2\xe4\x59\xa6\xb4\x6d\x55\xb5\x93\xbb\xb9\x77\xf6\x1a\xd3\x29\x57\xb1\xa0\xbb\x82\x7e\xd4\x50\xf0\x94\xdb\x21\x9f\x48\xa5\x1b\x35\xbc\x95\x33\x26\x78\x5c\x72\x38\x11\xc7\xe4\x9e\x48\xd9\x1d\x15\x0b\xb8\x20\x7f\xa4\xe4\x98\x4f\xd6\x69\x83\x22\x6d\x73\x1c\x7e\x22\x0b\x73\x9b\xa0\xb4\x3c\xf2\xc1\x98\xc2\x51\xe1\x0d\x0f\x95\xef\xcb\x98\xf1\x40\x90\x26\x46\x8a\xa6\x34\xe4\x30\x9e\xb6\x74\x45\x4c\xeb\x31\xfd\xa8\x0a\x53\x42\x19\x7c\xd7\x9e\xe5\x72\x40\x8f\xab\xd5\x15\x8c\xb5\x4a\xe9\xb7\x5f\xfd\xab\x55\x27\x46\x3f\x5d\x6d\x8c\x34\xac\x9c\x29\x83\xb6\x1f\xd7\xda\x39\x6d\x6c\x5b\x5e\x5c\x2e\x07\xeb\xdf\x7b\x5b\x89\x5a\x0f\x27\x68\xcb\x5d\xdc\x54\x59\xfd\x93\x71\xe1\x83\xcb\x04\xad\xdb\x86\x9b\x8d\x59\x8a\x7a\xe2\xfb\x0c\xe5\x67\x97\xa2\x0d\xea\x19\x8f\xf0\x3d\xe9\x82\x5a\x57\x15\xa9\x4d\x10\x32\x65\xda\x24\x4c\x88\xa1\x50\x11\x13\x4d\x99\xa1\x1c\x56\x61\x22\x6f\x79\x76\x27\x09\x33\x26\x72\x34\xe1\x74\xb4\x61\x93\x68\xe7\x4a\x4f\x7b\xf1\x71\x69\x51\x4b\x0c\x67\xa3\x4d\xd2\x1a\x66\x5a\xa5\x59\xd3\x4e\xfc\xa0\x60\xa1\x72\xd0\xc8\x84\x58\xc0\x9c\x49\x4b\x0e\xf7\xd2\x60\x13\x6e\xfe\x0e\x7f\x58\xfc\xe9\xee\x8f\xef\xa1\x13\x97\xab\x95\x31\x6e\x0c\x76\x1f\xd6\x43\x21\x52\x69\x26\x90\x26\xb3\x28\xb0\xc7\xb9\x10\x8b\xae\x46\x8d\xdd\xe2\x68\x67\x89\x79\x5c\x6c\x79\xcf\x46\x64\x6b\x2e\x78\xc8\x25\x3c\xcf\xcd\xb4\xb0\xb7\xcc\xf5\xcf\xe4\x03\x8d\xa9\x9a\x21\x64\x4c\x5b\xee\x9c\xe3\xdf\x61\x0c\xcc\x18\xb4\xe1\xa9\xae\x68\x1a\x31\x19\xa1\x68\x56\xf6\xfe\x87\x01\xfc\xc3\x8f\xa1\xfa\xa3\x6b\x69\x53\x29\x4b\xa8\xc2\x61\x13\x8c\xc3\x4e\xf9\xa9\x22\x41\xe5\x61\x8c\xde\xfb\x14\xf5\x2d\x47\x13\x74\x15\xc4\xb9\x26\xed\x0a\xa6\xaa\x96\xa7\x73\x22\x1d\xdf\x5c\x11\x1d\x63\xa6\x31\x62\x16\xe3\xa1\xc6\x4c\xb0\xa8\xd1\x48\x0a\x54\x94\x3b\x95\x88\xa7\xb8\xa0\xe4\xe9\xe2\xa3\xaf\x43\x96\xcb\x01\x15\x1f\x76\x91\xe1\x6a\xe5\xeb\x90\x39\x17\x02\x8c\x52\x12\x46\x08\x1b\x9a\x2b\xc8\x04\x32\x83\x90\x1b\x74\xa2\x84\x29\x71\xbe\x85\x69\x2c\xb2\xed\x04\xb2\x1b\xe4\xca\x24\x95\x32\x19\x33\xab\xf4\x22\x70\x18\x22\xcd\xd7\xe3\x1c\x03\x71\x16\x84\xdc\x40\x81\x35\x08\x87\xd5\xb2\xf8\x74\x61\x9d\x76\xfe\xef\x18\x85\x92\x70\x49\xe1\xa2\x7b\x4c\x3f\x63\x7a\x5a\xad\xc8\x67\x95\xf5\xe2\x9c\x45\x0a\xc5\x65\x6d\xbc\x53\x9a\xda\x22\x43\x10\x44\xea\x21\x56\x5b\x85\xcb\x1a\x21\x2d\x8f\x08\xf5\x96\x3c\xde\x7c\xba\x7e\xb8\x7e\xba\x7f\x68\xd0\xfa\x6f\xb5\x7f\x70\x23\xad\xa6\x45\x3c\x42\xa1\xe6\x2e\x70\x81\xe0\x12\x81\xa1\x76\x5a\xce\x50\xfb\x7a\xaf\x5e\x7e\xeb\xaf\x5e\xb1\xef\x95\x05\x77\x25\x01\x91\x46\x66\x69\x37\x64\x2c\x9a\xb2\x09\xfa\xba\xdc\xbf\x4b\xd1\x18\x36\xa9\x24\x20\x60\x32\x2e\xe5\x54\xec\x5f\xd0\x83\x4f\x4d\xf5\x36\x9e\x84\xaa\xab\x51\x45\x1d\xfa\xbf\x65\x53\xc6\xcf\x61\xd0\x61\x34\x5d\x8d\xd1\xb9\x38\xcb\x92\x3b\x90\xa7\xc5\x1c\x83\xd6\xb1\xb8\xba\xce\x32\x9b\x1b\x4a\x4a\x27\xb6\xed\x24\xa4\x5d\xe7\xcd\x6a\x3e\x99\xa0\x3e\xc7\xd4\x1d\x4e\xb5\xaf\x51\x63\xc4\xf8\x9c\x96\x1d\xc8\xb7\x6f\x84\x1f\x71\x19\xd3\xef\x33\x46\xc5\xc3\x29\x6b\x8d\xfc\xb0\x53\x04\x66\x28\x63\x94\xd1\xc2\xe5\x7e\xcc\xee\x7c\xf6\x3f\x6d\xd9\xdc\x5a\xb5\xbf\x9a\x66\x01\x97\x55\x72\x23\x15\x98\xb9\xcd\x72\xbb\x5a\xc1\x60\x30\x08\xda\x13\x10\x6b\x21\x73\x61\x69\x5f\xaa\x5a\xa1\x16\xa2\xad\x3d\xb5\x2f\x61\x50\xb8\x85\xb8\x5c\xea\xfb\x72\x36\xc9\x75\xa4\x2b\x77\x56\x5f\xda\x26\xf9\x16\xfa\xed\x15\xbd\x17\x73\x40\xb4\x96\x74\x73\xa6\x24\xe9\xdd\x2b\xec\xb6\x73\x68\x9d\x4c\x2d\xcd\xd6\x91\x32\xb8\x31\x1b\x59\xf7\x82\x68\x0b\x68\x7e\x87\xbf\xbc\x50\x68\x8d\x37\x4d\x82\xdf\xae\xd5\x25\xc2\xcb\xd5\xb1\x09\x95\xcd\x2b\xab\xab\x74\xbb\xfd\x7d\x23\x75\x37\xd7\x1c\x80\xde\x92\xe1\xdd\xed\xc7\x59\x8e\x3b\xc7\x63\xea\x6a\xd2\x89\x8b\xe8\x63\xf1\xfc\xff\x80\xb0\xe3\xcf\xd3\x1f\x10\x8e\x48\xb5\xaf\x51\x27\x3e\x20\x1c\x9b\xaf\xab\x79\xa7\xbf\x02\x3a\x22\x55\xad\x51\x9f\xaf\x1f\xee\x6e\xef\xbe\x7f\x0f\x4f\x09\xc2\xa5\xff\x80\x73\x09\xbf\x5c\x7f\xfc\x71\x7d\x77\x5a\xb8\xd4\xdd\x14\xbb\xaf\x4d\x9b\x9b\xd2\x01\x7c\xda\xdc\x94\x5e\x92\xd3\x2f\xcb\xab\x51\x60\x34\xd0\x44\x9a\x8f\xfc\x77\xd6\xe2\xa3\xab\xff\xc4\x18\x38\x08\xbc\xa6\x46\x5d\xe7\xbd\xac\x01\xcf\x38\xff\xc7\xa3\x6c\xaa\xa3\xea\x6a\xcc\x84\x19\x18\x21\xca\xad\xda\x68\x7d\x74\x0a\x56\x57\xfd\xe0\x6a\x95\xfb\x14\x28\xbd\xfb\x6a\x78\x18\x66\x50\xcd\x63\xaa\x77\x04\xb5\x9e\x8a\xed\x72\x0c\xb5\xfa\x61\x05\xd5\x7a\x71\x74\x3c\x54\xb7\x1e\x80\xb5\x0a\x3e\xec\x1e\xa6\xfb\x2a\xd6\x03\xa8\x56\xa1\xeb\x97\x17\x09\x7d\x55\xea\x05\xd5\x21\x70\x6c\x2a\xf4\x7a\xb8\xf2\x60\xd9\x3d\x76\xec\x87\xd8\xb6\x01\x8a\xd4\x51\x45\x2b\x4e\x7f\x9d\xd6\x7c\x58\x3c\xb8\x8a\xa8\x8a\xdc\x8b\xb6\x83\x60\xcb\x2a\x29\x9b\x95\xf6\x20\xed\x28\x5c\x4b\xbc\xe9\xd8\xe0\x72\xa6\xa6\xfe\xd3\xa9\x2f\xc4\x12\x94\x67\xaa\x09\xcf\xac\x44\xb8\xa6\xfa\xb8\xfe\xa2\x3b\xe6\x28\x62\x28\x83\xfa\xcf\xbe\xdd\x14\xd2\xdc\x58\x18\x21\x9d\x3b\x3a\xd4\x43\x7b\xa2\x85\x55\xdb\x15\x2e\x9b\xdf\xd8\xcc\xd7\x46\xe4\xb6\x28\xd7\x9a\xce\xe1\x9b\x1b\xd5\xa2\x4f\xb6\x83\xb2\x07\xe3\xf7\xf3\xec\x8f\x3c\x42\x69\xf0\x48\x9e\x6d\x40\xeb\xe6\xd9\x52\xf8\x54\x9e\xed\x8d\x1f\x56\xbf\x84\x75\x2d\x88\xee\xf1\xf6\xc3\x6a\x55\xb2\x30\xf0\xed\x8a\x4a\x62\x07\x55\xf7\xc2\xaa\xef\x6c\xc0\x54\xe9\xc5\x23\xff\x8a\x74\x12\x77\x3d\x91\x66\xab\xb1\xc0\x24\x2a\x17\x31\x4d\x0e\x93\xae\x37\x8a\x36\xf5\x08\xed\x9c\x22\xd6\xbb\xef\xfe\xea\xb6\xef\x5f\xde\x7d\xd7\xac\xed\x51\x29\x6a\x8d\xb0\x3c\x45\x95\xdb\x5e\xf0\x6f\xdf\x3a\xf8\x3f\xbf\xa5\xbf\x66\x23\x8e\x4a\x51\x6b\x84\x50\x93\xbe\x3e\xf2\xf8\xef\x02\xea\x1f\x09\xbc\x6d\x65\x3b\x64\x28\x9b\x6b\x8b\x56\x97\x75\x5b\x68\xc2\xe4\x84\x8d\x04\xd2\x39\xd1\x2a\x90\x6a\x7e\x05\xf3\x84\xbb\xce\x6b\x21\x88\xbe\xd2\x7b\xdb\xba\xf2\x8f\xc8\x15\x36\x8b\x65\x99\x28\x1b\x77\x6b\xda\x76\xba\xf4\x38\x15\x9d\x42\xd5\xae\xa6\x16\xfb\x4e\x43\x5a\x5f\x56\xb8\xff\x65\x50\xe9\xc3\xae\x16\x27\xde\x67\xee\x06\xc0\xf7\xb3\xb9\x1e\xc9\x6a\x08\x2c\x69\x96\xcb\x41\xf1\x58\xd7\x9a\xb4\xc6\x19\x61\xf5\xfb\x47\x68\xae\x5f\x5f\xaf\x16\x77\xd9\xba\xba\xf5\x9b\x70\xd8\xeb\x69\xd6\xe2\xb2\xca\xa7\xc5\xe2\xf1\x5b\x71\xd9\xeb\x69\x46\x2e\xbb\xf8\xed\xe2\xbf\x01\x00\x00\xff\xff\xda\xc1\x92\x94\xac\x37\x00\x00")

func wski18nResourcesEn_usAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesEn_usAllJson,
		"wski18n/resources/en_US.all.json",
	)
}

func wski18nResourcesEn_usAllJson() (*asset, error) {
	bytes, err := wski18nResourcesEn_usAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/en_US.all.json", size: 14252, mode: os.FileMode(420), modTime: time.Unix(1515509293, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesEs_esAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesEs_esAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesEs_esAllJson,
		"wski18n/resources/es_ES.all.json",
	)
}

func wski18nResourcesEs_esAllJson() (*asset, error) {
	bytes, err := wski18nResourcesEs_esAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/es_ES.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesFr_frAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\xe6\x52\x50\xa8\xe6\x52\x50\x50\x50\x50\xca\x4c\x51\xb2\x52\x50\x4a\xaa\x2c\x48\x2c\x2e\x56\x48\x4e\x2d\x2a\xc9\x4c\xcb\x4c\x4e\x2c\x49\x55\x48\xce\x48\x4d\xce\xce\xcc\x4b\x57\xd2\x81\x28\x2c\x29\x4a\xcc\x2b\xce\x49\x2c\xc9\xcc\xcf\x03\xe9\x08\xce\xcf\x4d\x55\x40\x12\x53\xc8\xcc\x53\x70\x2b\x4a\xcd\x4b\xce\x50\xe2\x52\x50\xa8\xe5\x8a\xe5\x02\x04\x00\x00\xff\xff\x45\xa4\xe9\x62\x65\x00\x00\x00")

func wski18nResourcesFr_frAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesFr_frAllJson,
		"wski18n/resources/fr_FR.all.json",
	)
}

func wski18nResourcesFr_frAllJson() (*asset, error) {
	bytes, err := wski18nResourcesFr_frAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/fr_FR.all.json", size: 101, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesIt_itAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesIt_itAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesIt_itAllJson,
		"wski18n/resources/it_IT.all.json",
	)
}

func wski18nResourcesIt_itAllJson() (*asset, error) {
	bytes, err := wski18nResourcesIt_itAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/it_IT.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesJa_jaAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesJa_jaAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesJa_jaAllJson,
		"wski18n/resources/ja_JA.all.json",
	)
}

func wski18nResourcesJa_jaAllJson() (*asset, error) {
	bytes, err := wski18nResourcesJa_jaAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/ja_JA.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesKo_krAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesKo_krAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesKo_krAllJson,
		"wski18n/resources/ko_KR.all.json",
	)
}

func wski18nResourcesKo_krAllJson() (*asset, error) {
	bytes, err := wski18nResourcesKo_krAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/ko_KR.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesPt_brAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesPt_brAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesPt_brAllJson,
		"wski18n/resources/pt_BR.all.json",
	)
}

func wski18nResourcesPt_brAllJson() (*asset, error) {
	bytes, err := wski18nResourcesPt_brAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/pt_BR.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesZh_hansAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesZh_hansAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesZh_hansAllJson,
		"wski18n/resources/zh_Hans.all.json",
	)
}

func wski18nResourcesZh_hansAllJson() (*asset, error) {
	bytes, err := wski18nResourcesZh_hansAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/zh_Hans.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wski18nResourcesZh_hantAllJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func wski18nResourcesZh_hantAllJsonBytes() ([]byte, error) {
	return bindataRead(
		_wski18nResourcesZh_hantAllJson,
		"wski18n/resources/zh_Hant.all.json",
	)
}

func wski18nResourcesZh_hantAllJson() (*asset, error) {
	bytes, err := wski18nResourcesZh_hantAllJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wski18n/resources/zh_Hant.all.json", size: 0, mode: os.FileMode(420), modTime: time.Unix(1505354770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"wski18n/resources/de_DE.all.json": wski18nResourcesDe_deAllJson,
	"wski18n/resources/en_US.all.json": wski18nResourcesEn_usAllJson,
	"wski18n/resources/es_ES.all.json": wski18nResourcesEs_esAllJson,
	"wski18n/resources/fr_FR.all.json": wski18nResourcesFr_frAllJson,
	"wski18n/resources/it_IT.all.json": wski18nResourcesIt_itAllJson,
	"wski18n/resources/ja_JA.all.json": wski18nResourcesJa_jaAllJson,
	"wski18n/resources/ko_KR.all.json": wski18nResourcesKo_krAllJson,
	"wski18n/resources/pt_BR.all.json": wski18nResourcesPt_brAllJson,
	"wski18n/resources/zh_Hans.all.json": wski18nResourcesZh_hansAllJson,
	"wski18n/resources/zh_Hant.all.json": wski18nResourcesZh_hantAllJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"wski18n": &bintree{nil, map[string]*bintree{
		"resources": &bintree{nil, map[string]*bintree{
			"de_DE.all.json": &bintree{wski18nResourcesDe_deAllJson, map[string]*bintree{}},
			"en_US.all.json": &bintree{wski18nResourcesEn_usAllJson, map[string]*bintree{}},
			"es_ES.all.json": &bintree{wski18nResourcesEs_esAllJson, map[string]*bintree{}},
			"fr_FR.all.json": &bintree{wski18nResourcesFr_frAllJson, map[string]*bintree{}},
			"it_IT.all.json": &bintree{wski18nResourcesIt_itAllJson, map[string]*bintree{}},
			"ja_JA.all.json": &bintree{wski18nResourcesJa_jaAllJson, map[string]*bintree{}},
			"ko_KR.all.json": &bintree{wski18nResourcesKo_krAllJson, map[string]*bintree{}},
			"pt_BR.all.json": &bintree{wski18nResourcesPt_brAllJson, map[string]*bintree{}},
			"zh_Hans.all.json": &bintree{wski18nResourcesZh_hansAllJson, map[string]*bintree{}},
			"zh_Hant.all.json": &bintree{wski18nResourcesZh_hantAllJson, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

